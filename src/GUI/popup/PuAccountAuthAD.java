/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI.popup;
import BUS.ActionBUS;
import BUS.PermissionBUS;
import BUS.RoleBUS;
import DTO.entities.Action;
import DTO.entities.Role;
import GUI.body_panel.AccountAD;
import java.awt.Toolkit;
import javax.swing.WindowConstants;
import assets.Styles;
import java.io.IOException;
import java.security.NoSuchAlgorithmException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author WIN 10
 */
public class PuAccountAuthAD extends javax.swing.JFrame {
    private PermissionBUS permissionBUS;
    private ActionBUS actionBUS;
    private RoleBUS roleBUS;
    
    private Role newRole;
    private ArrayList<Action> actionList;
    private DefaultTableModel permissionModel; 
    /**
     * Creates new form PuAccountAuthAD
     */
    public PuAccountAuthAD() {
        try {
            initComponents();
            try {
                this.permissionBUS = new PermissionBUS();
                this.actionBUS = new ActionBUS();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(PuAccountAuthAD.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(PuAccountAuthAD.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(PuAccountAuthAD.class.getName()).log(Level.SEVERE, null, ex);
            }
            this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/assets/image/app-favicon.png")));
            this.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
            this.setLocationRelativeTo(null);
            this.setTitle("Tài khoản");
            initTablePermission();
            style();
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PuAccountAuthAD.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(PuAccountAuthAD.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(PuAccountAuthAD.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public void initTablePermission() throws ClassNotFoundException, SQLException, IOException{
        permissionModel = (DefaultTableModel) tableRolePermission.getModel();
        permissionModel.setRowCount(0);

        actionBUS = new ActionBUS();
        actionList = actionBUS.getList();        
        int stt = 1;
        for(Action action : actionList){
            permissionModel.addRow(new Object[]{stt++,action.getActionName(),false,false,false,false,false});
        }        
    }
    
    public void style(){
        Styles.ButtonPrimary(btnSavePermission);
        Styles.Table(tableRolePermission, jScrollPane1);
        Styles.FormLabel(jLabel1);
        Styles.FormTextFeild(txtTypeAccount);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popupHeader1 = new GUI.components.PopupHeader("Tài khoản", "/assets/icon/info-user-white32");
        jLabel1 = new javax.swing.JLabel();
        txtTypeAccount = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableRolePermission = new javax.swing.JTable();
        btnSavePermission = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Loại tài khoản");

        txtTypeAccount.setMinimumSize(new java.awt.Dimension(160, 22));
        txtTypeAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTypeAccountActionPerformed(evt);
            }
        });

        tableRolePermission.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "STT", "Chức năng", "A", "C", "R", "U", "D"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableRolePermission);
        if (tableRolePermission.getColumnModel().getColumnCount() > 0) {
            tableRolePermission.getColumnModel().getColumn(0).setMinWidth(40);
            tableRolePermission.getColumnModel().getColumn(0).setMaxWidth(50);
            tableRolePermission.getColumnModel().getColumn(2).setMinWidth(30);
            tableRolePermission.getColumnModel().getColumn(2).setMaxWidth(40);
            tableRolePermission.getColumnModel().getColumn(3).setMinWidth(30);
            tableRolePermission.getColumnModel().getColumn(3).setMaxWidth(40);
            tableRolePermission.getColumnModel().getColumn(4).setMinWidth(30);
            tableRolePermission.getColumnModel().getColumn(4).setMaxWidth(40);
            tableRolePermission.getColumnModel().getColumn(5).setMinWidth(30);
            tableRolePermission.getColumnModel().getColumn(5).setMaxWidth(40);
            tableRolePermission.getColumnModel().getColumn(6).setMinWidth(30);
            tableRolePermission.getColumnModel().getColumn(6).setMaxWidth(40);
        }

        btnSavePermission.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icon/action-save-white18.png"))); // NOI18N
        btnSavePermission.setText("Lưu thông tin");
        btnSavePermission.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSavePermissionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(popupHeader1, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(103, 103, 103)
                        .addComponent(txtTypeAccount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(btnSavePermission, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(popupHeader1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtTypeAccount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 354, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnSavePermission)
                .addGap(40, 40, 40))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtTypeAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTypeAccountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTypeAccountActionPerformed

    private void btnSavePermissionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSavePermissionActionPerformed
        try {
            String newRoleName = txtTypeAccount.getText();
            if(newRoleName.isEmpty()){
                JOptionPane.showMessageDialog(this,"Bạn cần nhập tên Role cần thêm mới", "Thông báo lỗi", JOptionPane.INFORMATION_MESSAGE);
            }else{
                int rowCount = tableRolePermission.getRowCount();
                int[] columnIndices = {2, 3, 4, 5, 6}; // Chỉ mục của các cột cần lấy giá trị
                List<List<Object>> dataList = new ArrayList<>();
                for (int row = 0; row < rowCount; row++) {
                    List<Object> rowData = new ArrayList<>();
                    for (int columnIndex : columnIndices) {
                        Object cellValue = tableRolePermission.getValueAt(row, columnIndex);
                        rowData.add(cellValue);
                    }
                    dataList.add(rowData);

                }
                roleBUS = new RoleBUS();
                String ID  = Role.generateID();
                newRole = new Role(ID, newRoleName);
                roleBUS.createNewRole(newRole);
                permissionBUS.savePermissions(dataList, ID);
                AccountAD accountAD = new AccountAD();
                accountAD.setVisible(true);

                accountAD.initTableRoles(roleBUS.getList());
                this.setVisible(false);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PuAccountAuthAD.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(PuAccountAuthAD.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(PuAccountAuthAD.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(PuAccountAuthAD.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnSavePermissionActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSavePermission;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private GUI.components.PopupHeader popupHeader1;
    private javax.swing.JTable tableRolePermission;
    private javax.swing.JTextField txtTypeAccount;
    // End of variables declaration//GEN-END:variables
}
