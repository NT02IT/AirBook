/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import BUS.ReceiverBUS;
import BUS.UserBUS;
import DTO.entities.User;
import assets.DateTime;
import assets.EnumCheck.DateValidStatus;
import assets.EnumCheck.NumbersValidStatus;
import assets.EnumCheck.PwdValidStatus;
import assets.EnumCheck.ValidStatus;
import assets.Styles;
import assets.TextBubbleBorder;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.io.IOException;
import java.security.NoSuchAlgorithmException;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.border.AbstractBorder;

/**
 *
 * @author agond
 */
public class SignupEUC extends javax.swing.JFrame {

    /**
     * Creates new form AuthGUI
     */
    private String roleID = "ROLE3", username, pwd, pwdConfirm, ID, name, gender, doB, address, nation, phoneNumber, CCCD, email;
    private DateTime date= new DateTime();
    private User newAccount;
    private UserBUS userBUS;
    private ReceiverBUS receiverBUS;
    
    public SignupEUC() throws ClassNotFoundException, SQLException {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/assets/image/app-favicon.png")));
        try {
            userBUS = new UserBUS();
            receiverBUS = new ReceiverBUS();
        } catch (IOException ex) {
            Logger.getLogger(SignupEUC.class.getName()).log(Level.SEVERE, null, ex);
        }
        style();
    }
    
    public void style(){
        this.setTitle("Airbook - Đăng ký");
        
        lbTitle.setForeground(Styles.PRI_NORMAL);
        lbTitle.setFont(Styles.H1);
        
        lbSubtitle1.setForeground(Styles.GRAY_400);
        lbSubtitle1.setFont(Styles.Micro);
        
        lbSubtitle2.setForeground(Styles.GRAY_400);
        lbSubtitle2.setFont(Styles.Micro);
        
        Styles.FormLabel(lbName);
        Styles.FormTextFeild(txtName);
        
        Styles.FormLabel(lbGender);
        Styles.FormRadio(rdoMale, grpGender);
        Styles.FormRadio(rdoFemale, grpGender);
        Styles.FormRadio(rdoOrther, grpGender);
        
        Styles.FormLabel(lbDoB);
        Styles.FormDateFeild(txtDoB);

        Styles.FormLabel(lbCCCD);
        Styles.FormTextFeild(txtCCCD);
        
        Styles.FormLabel(lbNation);
        Styles.FormTextFeild(txtNation);
        
        Styles.FormLabel(lbAddress);
        Styles.FormTextFeild(txtAddress);

        Styles.FormLabel(lbPhoneNum);
        Styles.FormTextFeild(txtPhoneNum);
        
        Styles.FormLabel(lbEmail);
        Styles.FormTextFeild(txtEmail);
        
        Styles.FormLabel(lbUsername);
        Styles.FormTextFeild(txtUsername);
        
        Styles.FormLabel(lbPwd);
        Styles.FormTextFeild(txtPwd);
        
        Styles.FormLabel(lbPwdConfirm);
        Styles.FormTextFeild(txtPwdConfirm);
        
        txtNoti.setForeground(Styles.FUNC_DANGER);
        txtNoti.setFont(Styles.Body);
        AbstractBorder border = new TextBubbleBorder(Styles.GRAY_200,1,6,0, true);
        txtNoti.setBorder(border);
        
        Styles.ButtonPrimary(btSignup);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grpGender = new javax.swing.ButtonGroup();
        pnBody = new javax.swing.JPanel();
        lbTitle = new javax.swing.JLabel();
        lbUsername = new javax.swing.JLabel();
        lbPwd = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        btSignup = new javax.swing.JButton();
        lbSubtitle1 = new javax.swing.JLabel();
        lbPwdConfirm = new javax.swing.JLabel();
        lbSubtitle2 = new javax.swing.JLabel();
        lbName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtDoB = new javax.swing.JTextField();
        lbDoB = new javax.swing.JLabel();
        lbCCCD = new javax.swing.JLabel();
        txtCCCD = new javax.swing.JTextField();
        lbPhoneNum = new javax.swing.JLabel();
        txtPhoneNum = new javax.swing.JTextField();
        txtAddress = new javax.swing.JTextField();
        lbAddress = new javax.swing.JLabel();
        lbNation = new javax.swing.JLabel();
        txtNation = new javax.swing.JTextField();
        txtPwd = new javax.swing.JPasswordField();
        txtPwdConfirm = new javax.swing.JPasswordField();
        txtEmail = new javax.swing.JTextField();
        lbEmail = new javax.swing.JLabel();
        lbGender = new javax.swing.JLabel();
        rdoMale = new javax.swing.JRadioButton();
        rdoFemale = new javax.swing.JRadioButton();
        rdoOrther = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtNoti = new javax.swing.JTextPane();
        pnHeader = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        btBack = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);
        setSize(new java.awt.Dimension(360, 592));

        pnBody.setBackground(new java.awt.Color(255, 255, 255));
        pnBody.setPreferredSize(new java.awt.Dimension(360, 266));

        lbTitle.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        lbTitle.setForeground(new java.awt.Color(1, 138, 165));
        lbTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbTitle.setText("Đăng ký tài khoản mới");

        lbUsername.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbUsername.setForeground(new java.awt.Color(84, 104, 129));
        lbUsername.setLabelFor(txtUsername);
        lbUsername.setText("Username");

        lbPwd.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbPwd.setForeground(new java.awt.Color(84, 104, 129));
        lbPwd.setLabelFor(txtPwd);
        lbPwd.setText("Mật khẩu");

        txtUsername.setBackground(new java.awt.Color(246, 246, 246));
        txtUsername.setNextFocusableComponent(txtPwd);
        txtUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsernameActionPerformed(evt);
            }
        });

        btSignup.setBackground(new java.awt.Color(1, 138, 165));
        btSignup.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btSignup.setForeground(new java.awt.Color(255, 255, 255));
        btSignup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icon/action-add-white18.png"))); // NOI18N
        btSignup.setText("Đăng ký");
        btSignup.setBorder(null);
        btSignup.setFocusPainted(false);
        btSignup.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btSignupMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btSignupMouseExited(evt);
            }
        });
        btSignup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSignupActionPerformed(evt);
            }
        });

        lbSubtitle1.setForeground(new java.awt.Color(84, 104, 129));
        lbSubtitle1.setText("Thông tin đăng nhập");

        lbPwdConfirm.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbPwdConfirm.setForeground(new java.awt.Color(84, 104, 129));
        lbPwdConfirm.setLabelFor(txtPwdConfirm);
        lbPwdConfirm.setText("Xác nhận mật khẩu");

        lbSubtitle2.setForeground(new java.awt.Color(84, 104, 129));
        lbSubtitle2.setText("Thông tin tài khoản");

        lbName.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbName.setForeground(new java.awt.Color(84, 104, 129));
        lbName.setLabelFor(txtName);
        lbName.setText("Họ và tên");

        txtName.setBackground(new java.awt.Color(246, 246, 246));
        txtName.setNextFocusableComponent(txtDoB);
        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        txtDoB.setBackground(new java.awt.Color(246, 246, 246));
        txtDoB.setNextFocusableComponent(txtCCCD);
        txtDoB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDoBActionPerformed(evt);
            }
        });

        lbDoB.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbDoB.setForeground(new java.awt.Color(84, 104, 129));
        lbDoB.setLabelFor(txtDoB);
        lbDoB.setText("Ngày sinh");

        lbCCCD.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbCCCD.setForeground(new java.awt.Color(84, 104, 129));
        lbCCCD.setLabelFor(txtCCCD);
        lbCCCD.setText("Số CCCD");

        txtCCCD.setBackground(new java.awt.Color(246, 246, 246));
        txtCCCD.setNextFocusableComponent(txtNation);
        txtCCCD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCCCDActionPerformed(evt);
            }
        });

        lbPhoneNum.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbPhoneNum.setForeground(new java.awt.Color(84, 104, 129));
        lbPhoneNum.setLabelFor(txtPhoneNum);
        lbPhoneNum.setText("Số điện thoại");

        txtPhoneNum.setBackground(new java.awt.Color(246, 246, 246));
        txtPhoneNum.setNextFocusableComponent(txtEmail);
        txtPhoneNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPhoneNumActionPerformed(evt);
            }
        });

        txtAddress.setBackground(new java.awt.Color(246, 246, 246));
        txtAddress.setNextFocusableComponent(txtPhoneNum);
        txtAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddressActionPerformed(evt);
            }
        });

        lbAddress.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbAddress.setForeground(new java.awt.Color(84, 104, 129));
        lbAddress.setLabelFor(txtAddress);
        lbAddress.setText("Địa chỉ");

        lbNation.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbNation.setForeground(new java.awt.Color(84, 104, 129));
        lbNation.setLabelFor(txtNation);
        lbNation.setText("Quốc gia");

        txtNation.setBackground(new java.awt.Color(246, 246, 246));
        txtNation.setNextFocusableComponent(txtAddress);
        txtNation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNationActionPerformed(evt);
            }
        });

        txtPwd.setBackground(new java.awt.Color(246, 246, 246));
        txtPwd.setNextFocusableComponent(txtPwdConfirm);
        txtPwd.setPreferredSize(new java.awt.Dimension(90, 27));
        txtPwd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPwdActionPerformed(evt);
            }
        });

        txtPwdConfirm.setBackground(new java.awt.Color(246, 246, 246));
        txtPwdConfirm.setNextFocusableComponent(btSignup);
        txtPwdConfirm.setPreferredSize(new java.awt.Dimension(90, 27));
        txtPwdConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPwdConfirmActionPerformed(evt);
            }
        });

        txtEmail.setBackground(new java.awt.Color(246, 246, 246));
        txtEmail.setNextFocusableComponent(txtUsername);
        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });

        lbEmail.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbEmail.setForeground(new java.awt.Color(84, 104, 129));
        lbEmail.setLabelFor(txtEmail);
        lbEmail.setText("Email");

        lbGender.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbGender.setForeground(new java.awt.Color(84, 104, 129));
        lbGender.setLabelFor(rdoMale);
        lbGender.setText("Giới tính");

        rdoMale.setBackground(getBackground());
        grpGender.add(rdoMale);
        rdoMale.setText("Nam");
        rdoMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoMaleActionPerformed(evt);
            }
        });

        rdoFemale.setBackground(getBackground());
        grpGender.add(rdoFemale);
        rdoFemale.setText("Nữ");
        rdoFemale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoFemaleActionPerformed(evt);
            }
        });

        rdoOrther.setBackground(getBackground());
        grpGender.add(rdoOrther);
        rdoOrther.setText("Khác");
        rdoOrther.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoOrtherActionPerformed(evt);
            }
        });

        jScrollPane1.setBorder(null);

        txtNoti.setBorder(null);
        txtNoti.setForeground(new java.awt.Color(255, 102, 102));
        txtNoti.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        txtNoti.setDisabledTextColor(new java.awt.Color(255, 102, 102));
        txtNoti.setEnabled(false);
        jScrollPane1.setViewportView(txtNoti);

        javax.swing.GroupLayout pnBodyLayout = new javax.swing.GroupLayout(pnBody);
        pnBody.setLayout(pnBodyLayout);
        pnBodyLayout.setHorizontalGroup(
            pnBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnBodyLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(pnBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbSubtitle2)
                    .addGroup(pnBodyLayout.createSequentialGroup()
                        .addGroup(pnBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lbDoB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbCCCD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbAddress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbPhoneNum, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbNation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbGender, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbName, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(46, 46, 46)
                        .addGroup(pnBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnBodyLayout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtCCCD, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnBodyLayout.createSequentialGroup()
                                    .addComponent(rdoMale)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(rdoFemale)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(rdoOrther))
                                .addComponent(txtDoB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNation, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPhoneNum, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(50, 50, 50)
                .addGroup(pnBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btSignup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lbSubtitle1)
                        .addGroup(pnBodyLayout.createSequentialGroup()
                            .addGroup(pnBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(pnBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lbPwd, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(lbUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lbPwdConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(pnBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtPwdConfirm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtUsername)
                                .addComponent(txtPwd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(24, 24, 24))
        );
        pnBodyLayout.setVerticalGroup(
            pnBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnBodyLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(lbTitle)
                .addGap(32, 32, 32)
                .addGroup(pnBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnBodyLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(pnBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(pnBodyLayout.createSequentialGroup()
                                    .addGap(71, 71, 71)
                                    .addComponent(lbDoB)
                                    .addGap(15, 15, 15)
                                    .addComponent(lbCCCD)
                                    .addGap(13, 13, 13)
                                    .addComponent(lbNation, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(11, 11, 11)
                                    .addComponent(lbAddress)
                                    .addGap(15, 15, 15)
                                    .addComponent(lbPhoneNum))
                                .addGroup(pnBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnBodyLayout.createSequentialGroup()
                                        .addGap(32, 32, 32)
                                        .addGroup(pnBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(rdoMale)
                                            .addComponent(rdoFemale)
                                            .addComponent(rdoOrther))
                                        .addGap(7, 7, 7)
                                        .addGroup(pnBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(pnBodyLayout.createSequentialGroup()
                                                .addGap(1, 1, 1)
                                                .addComponent(txtDoB, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(pnBodyLayout.createSequentialGroup()
                                                .addGap(35, 35, 35)
                                                .addComponent(txtCCCD, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(8, 8, 8)
                                                .addComponent(txtNation, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(8, 8, 8)
                                                .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(8, 8, 8)
                                                .addComponent(txtPhoneNum, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(pnBodyLayout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(lbGender, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(pnBodyLayout.createSequentialGroup()
                        .addComponent(lbSubtitle2)
                        .addGap(9, 9, 9)
                        .addComponent(lbName, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnBodyLayout.createSequentialGroup()
                        .addComponent(lbSubtitle1)
                        .addGap(8, 8, 8)
                        .addGroup(pnBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnBodyLayout.createSequentialGroup()
                                .addComponent(lbEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(11, 11, 11)
                                .addComponent(lbPwd)
                                .addGap(15, 15, 15)
                                .addComponent(lbPwdConfirm))
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnBodyLayout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(7, 7, 7)
                                .addComponent(txtPwd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(8, 8, 8)
                                .addComponent(txtPwdConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(btSignup, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pnHeader.setBackground(btSignup.getBackground());
        pnHeader.setPreferredSize(new java.awt.Dimension(100, 62));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/image/log-header-logo.png"))); // NOI18N
        jLabel2.setPreferredSize(new java.awt.Dimension(116, 26));

        btBack.setBackground(new java.awt.Color(1, 138, 165));
        btBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icon/action-arrow-back-white32.png"))); // NOI18N
        btBack.setBorder(null);
        btBack.setFocusPainted(false);
        btBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btBackMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btBackMouseExited(evt);
            }
        });
        btBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBackActionPerformed(evt);
            }
        });

        jPanel1.setBackground(btSignup.getBackground());

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 63, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pnHeaderLayout = new javax.swing.GroupLayout(pnHeader);
        pnHeader.setLayout(pnHeaderLayout);
        pnHeaderLayout.setHorizontalGroup(
            pnHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnHeaderLayout.createSequentialGroup()
                .addComponent(btBack, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnHeaderLayout.setVerticalGroup(
            pnHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnHeaderLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnHeader, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 729, Short.MAX_VALUE)
            .addComponent(pnBody, javax.swing.GroupLayout.PREFERRED_SIZE, 729, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnHeader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(pnBody, javax.swing.GroupLayout.PREFERRED_SIZE, 504, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsernameActionPerformed
        txtUsername.addActionListener((ActionEvent e) -> {
            txtPwd.requestFocus();
        });
    }//GEN-LAST:event_txtUsernameActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        txtName.addActionListener((ActionEvent e) -> {
            txtDoB.requestFocus();
        });
    }//GEN-LAST:event_txtNameActionPerformed

    private void txtDoBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDoBActionPerformed
        txtDoB.addActionListener((ActionEvent e) -> {
            txtCCCD.requestFocus();
        });
    }//GEN-LAST:event_txtDoBActionPerformed

    private void txtPhoneNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPhoneNumActionPerformed
        txtPhoneNum.addActionListener((ActionEvent e) -> {
            txtEmail.requestFocus();
        });
    }//GEN-LAST:event_txtPhoneNumActionPerformed

    private void txtAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddressActionPerformed
        txtAddress.addActionListener((ActionEvent e) -> {
            txtPhoneNum.requestFocus();
        });
    }//GEN-LAST:event_txtAddressActionPerformed

    private void txtNationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNationActionPerformed
        txtNation.addActionListener((ActionEvent e) -> {
            txtAddress.requestFocus();
        });
    }//GEN-LAST:event_txtNationActionPerformed

    private void txtCCCDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCCCDActionPerformed
        txtCCCD.addActionListener((ActionEvent e) -> {
            txtNation.requestFocus();
        });
    }//GEN-LAST:event_txtCCCDActionPerformed

    private void btSignupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSignupActionPerformed
        ValidStatus chkNewAccount = ValidStatus.VALID;
        String strNoti = "";
        
        email = txtEmail.getText();
        email = email.trim();
        ValidStatus chkEmail;
        
        username = txtUsername.getText();
        username = username.trim();
        ValidStatus chkUsername;
        
        pwd = txtPwd.getText();
        PwdValidStatus chkPwd;
        
        pwdConfirm = txtPwdConfirm.getText();
        PwdValidStatus chkPwdCofirm;
        
        name = txtName.getText();
        name = User.formatName(name);
        ValidStatus chkName;
        
        doB = txtDoB.getText();
        doB = doB.trim();
        DateValidStatus chkDoB;
        
        CCCD = txtCCCD.getText();
        CCCD = CCCD.trim();
        NumbersValidStatus chkCCCD;
        
        nation = txtNation.getText();
        nation = nation.trim();
        ValidStatus chkNation;
        
        address = txtAddress.getText();
        address = address.trim();
        ValidStatus chkAddress;
        
        phoneNumber = txtPhoneNum.getText();
        phoneNumber = phoneNumber.trim();
        NumbersValidStatus chkPhone;
        
        if(email.equals("")){
            strNoti += "Email không được để trống.\n";
            chkNewAccount = ValidStatus.INVALID;
        } else{
            chkEmail = User.checkEmailValid(email);
            if(chkEmail == ValidStatus.INVALID){
                strNoti += "Không đúng định dạng email.\n";
                chkNewAccount = ValidStatus.INVALID;
            }
        }        
        
        if(username.equals("")){
            strNoti += "Username không được để trống.\n";
            chkNewAccount = ValidStatus.INVALID;
        }
        
        if(pwd.equals("")){
            strNoti += "Mật khẩu không được để trống.\n";
            chkNewAccount = ValidStatus.INVALID;
        } else if(!pwd.equals(pwdConfirm)){
            chkPwd = PwdValidStatus.UNMATCH;
            strNoti += "Mật khẩu không trùng khớp.\n";
            chkNewAccount = ValidStatus.INVALID;
        } 
        else {
            chkPwd = User.checkPwdValid(pwd);
            if(chkPwd == PwdValidStatus.MISSINGLETTER){
                strNoti += "Mật khẩu cần chứa ký tự.\n";
                chkNewAccount = ValidStatus.INVALID;
            }
            if(chkPwd == PwdValidStatus.MISSINGNUMBER){
                strNoti += "Mật khẩu cần chứa số.\n";
                chkNewAccount = ValidStatus.INVALID;
            }
            if(chkPwd == PwdValidStatus.VERYSHORT){
                strNoti += "Mật khẩu cần dài hơn 8 ký tự.\n";
                chkNewAccount = ValidStatus.INVALID;
            }
        }  
        
        if(name.equals("")){
            strNoti += "Tên không được để trống.\n";
            chkNewAccount = ValidStatus.INVALID;
        }
        
        if(grpGender.getSelection() == null){
            strNoti += "Giới tính không được để trống.\n";
            chkNewAccount = ValidStatus.INVALID;
        }
        
        chkDoB = date.checkFormat(doB);
        if (chkDoB == DateValidStatus.ISNULL) {
            strNoti += "Ngày sinh không được để trống.\n";
            chkNewAccount = ValidStatus.INVALID;
        } else if (chkDoB == DateValidStatus.UNCORRECTFORMAT) {
            strNoti += "Ngày sinh phải có dạng dd/mm/yyyy.\n";
            chkNewAccount = ValidStatus.INVALID;
        } else if (chkDoB == DateValidStatus.INVALID){
            strNoti += "Ngày sinh không hợp lệ.\n";
            chkNewAccount = ValidStatus.INVALID;
        }
        
        if(CCCD.equals("")){
            strNoti += "CCCD không được để trống.\n";
            chkNewAccount = ValidStatus.INVALID;
        } else{
            chkCCCD = User.checkCCCDValid(CCCD);
            if(chkCCCD == NumbersValidStatus.VERYLONG){
                strNoti += "Số CCCD quá dài.\n";
                chkNewAccount = ValidStatus.INVALID;
            }
            if(chkCCCD == NumbersValidStatus.VERYSHORT){
                strNoti += "Số CCCD quá ngắn.\n";
                chkNewAccount = ValidStatus.INVALID;
            }
            if(chkCCCD == NumbersValidStatus.HASLETTER){
                strNoti += "Số CCCD sai định dạng.\n";
                chkNewAccount = ValidStatus.INVALID;
            }
        }
        
        if(nation.equals("")){
            strNoti += "Quốc gia không được để trống.\n";
            chkNewAccount = ValidStatus.INVALID;
        }
        
        if(address.equals("")){
            strNoti += "Địa chỉ không được để trống.\n";
            chkNewAccount = ValidStatus.INVALID;
        }
        
        if(phoneNumber.equals("")){
            strNoti += "Số điện thoại không được để trống.\n";
            chkNewAccount = ValidStatus.INVALID;
        } else{
            chkPhone = User.checkPhoneValid(phoneNumber);
            if(chkPhone == NumbersValidStatus.VERYLONG){
                strNoti += "Số điện thoại quá dài.\n";
                chkNewAccount = ValidStatus.INVALID;
            }
            if(chkPhone == NumbersValidStatus.VERYSHORT){
                strNoti += "Số điện thoại quá ngắn.\n";
                chkNewAccount = ValidStatus.INVALID;
            }
            if(chkPhone == NumbersValidStatus.HASLETTER){
                strNoti += "Số điện thoại sai định dạng.\n";
                chkNewAccount = ValidStatus.INVALID;
            } 
        }   

        if(chkNewAccount == ValidStatus.VALID){
            ID = User.generateID();
            try {
                newAccount = new User(roleID, username, pwd, date.now(), ID, name, gender, date.strtoDate(doB), address, nation, phoneNumber, CCCD, email);
            } catch (ParseException ex) {
                Logger.getLogger(SignupEUC.class.getName()).log(Level.SEVERE, null, ex);
            } 
            if (userBUS.checkUnique(newAccount)) {
                try {
                    userBUS.signUp(newAccount);
                    receiverBUS.create(newAccount);
                } catch (NoSuchAlgorithmException ex) {
                    Logger.getLogger(SignupEUC.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(SignupEUC.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(SignupEUC.class.getName()).log(Level.SEVERE, null, ex);
                }
                JOptionPane.showMessageDialog(this,"Đăng ký thành công", "Thành công", JOptionPane.INFORMATION_MESSAGE);
                this.setVisible(false);
                try {
                    SigninGUI signinGUI = new SigninGUI();
                    signinGUI.setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(SignupEUC.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(SignupEUC.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(SignupEUC.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else{
                txtNoti.setText("Tài khoản đã tồn tại.");
            } 
        }   
        else txtNoti.setText(strNoti);
    }//GEN-LAST:event_btSignupActionPerformed

    private void txtPwdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPwdActionPerformed
        txtPwd.addActionListener((ActionEvent e) -> {
            txtPwdConfirm.requestFocus();
        });
    }//GEN-LAST:event_txtPwdActionPerformed

    private void txtPwdConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPwdConfirmActionPerformed
        txtPwdConfirm.addActionListener((ActionEvent e) -> {
            btSignup.requestFocus();
        });
    }//GEN-LAST:event_txtPwdConfirmActionPerformed

    private void btBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBackActionPerformed
        this.setVisible(false);
        try {
            SigninGUI signinGUI = new SigninGUI();
            signinGUI.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(SignupEUC.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(SignupEUC.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(SignupEUC.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btBackActionPerformed

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        txtEmail.addActionListener((ActionEvent e) -> {
            txtUsername.requestFocus();
        });
    }//GEN-LAST:event_txtEmailActionPerformed

    private void rdoMaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoMaleActionPerformed
        gender = "Nam";
    }//GEN-LAST:event_rdoMaleActionPerformed

    private void rdoFemaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoFemaleActionPerformed
        gender = "Nữ";
    }//GEN-LAST:event_rdoFemaleActionPerformed

    private void rdoOrtherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoOrtherActionPerformed
        gender = "Khác";
    }//GEN-LAST:event_rdoOrtherActionPerformed

    private void btBackMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btBackMouseEntered
        btBack.setBackground(Styles.PRI_DARK);
    }//GEN-LAST:event_btBackMouseEntered

    private void btSignupMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btSignupMouseEntered
        btSignup.setBackground(Styles.PRI_DARK);
    }//GEN-LAST:event_btSignupMouseEntered

    private void btSignupMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btSignupMouseExited
        btSignup.setBackground(Styles.PRI_NORMAL);
    }//GEN-LAST:event_btSignupMouseExited

    private void btBackMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btBackMouseExited
        btBack.setBackground(Styles.PRI_NORMAL);
    }//GEN-LAST:event_btBackMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SignupEUC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SignupEUC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SignupEUC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SignupEUC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new SignupEUC().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(SignupEUC.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(SignupEUC.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btBack;
    private javax.swing.JButton btSignup;
    private javax.swing.ButtonGroup grpGender;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbAddress;
    private javax.swing.JLabel lbCCCD;
    private javax.swing.JLabel lbDoB;
    private javax.swing.JLabel lbEmail;
    private javax.swing.JLabel lbGender;
    private javax.swing.JLabel lbName;
    private javax.swing.JLabel lbNation;
    private javax.swing.JLabel lbPhoneNum;
    private javax.swing.JLabel lbPwd;
    private javax.swing.JLabel lbPwdConfirm;
    private javax.swing.JLabel lbSubtitle1;
    private javax.swing.JLabel lbSubtitle2;
    private javax.swing.JLabel lbTitle;
    private javax.swing.JLabel lbUsername;
    private javax.swing.JPanel pnBody;
    private javax.swing.JPanel pnHeader;
    private javax.swing.JRadioButton rdoFemale;
    private javax.swing.JRadioButton rdoMale;
    private javax.swing.JRadioButton rdoOrther;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtCCCD;
    private javax.swing.JTextField txtDoB;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtNation;
    private javax.swing.JTextPane txtNoti;
    private javax.swing.JTextField txtPhoneNum;
    private javax.swing.JPasswordField txtPwd;
    private javax.swing.JPasswordField txtPwdConfirm;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
